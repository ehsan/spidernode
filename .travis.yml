language: cpp
sudo: false
cache:
  - ccache
  - apt
matrix:
  include:
    - os: linux
      compiler: clang
      services: docker
      env: BUILD_CONFIG=normal ENABLE_DEBUG=true EXPORTS="export CC=clang CXX=clang++"

    - os: linux
      compiler: gcc-4.8
      services: docker
      env: BUILD_CONFIG=normal ENABLE_DEBUG=true EXPORTS="export CC=gcc-4.8 CXX=g++-4.8"

    - os: linux
      compiler: gcc-5
      services: docker
      env: BUILD_CONFIG=normal ENABLE_DEBUG=true

    - os: linux
      compiler: clang
      services: docker
      env: BUILD_CONFIG=gczeal ENABLE_DEBUG=true EXPORTS="export CC=clang CXX=clang++"

    - os: linux
      compiler: clang
      services: docker
      env: BUILD_CONFIG=normal ENABLE_ASAN=true ENABLE_DEBUG=true EXPORTS="export CC=clang CXX=clang++"

    - os: osx
      compiler: clang
      env: BUILD_CONFIG=normal ENABLE_DEBUG=true

    - os: osx
      compiler: clang
      env: BUILD_CONFIG=gczeal MAKE_ARGS=-j2 ENABLE_DEBUG=true

    - os: osx
      compiler: clang-3.8
      osx_image: xcode7.3
      env: BUILD_CONFIG=normal ENABLE_ASAN=true MAKE_ARGS=-j2
      before_install:
        - wget http://llvm.org/releases/3.8.0/clang+llvm-3.8.0-x86_64-apple-darwin.tar.xz
        - tar xf clang+llvm-3.8.0-x86_64-apple-darwin.tar.xz
        - brew update
        - brew tap homebrew/versions
        - brew unlink autoconf
        - brew install autoconf213
        - brew install yasm gawk ccache python
      install: export CC=$PWD/clang+llvm-3.8.0-x86_64-apple-darwin/bin/clang CXX=$PWD/clang+llvm-3.8.0-x86_64-apple-darwin/bin/clang++
before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then docker build -t spidernode -f deps/spidershim/scripts/Dockerfile deps/spidershim/scripts; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install autoconf213 yasm; fi
before_script:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then ./configure $(if [ "$ENABLE_DEBUG" == "true" ]; then echo '--debug'; fi) --engine=spidermonkey $(if [ "$ENABLE_ASAN" == "true" ]; then echo "--enable-asan"; fi) $(if [ "$BUILD_CONFIG" == "gczeal" ]; then echo "--enable-gczeal"; fi); fi
script:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then travis_wait 60 make V= -k $MAKE_ARGS || true; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then if [ "$BUILD_CONFIG" == "gczeal" ]; then export JS_GC_MAX_ZEAL=1; fi; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then ./deps/spidershim/scripts/run-tests.py; fi
  - echo "$EXPORTS; ./configure $(if [ \"$ENABLE_DEBUG\" == \"true\" ]; then echo '--debug'; fi) --engine=spidermonkey $(if [ \"$ENABLE_ASAN\" == \"true\" ]; then echo \"--enable-asan\"; fi) $(if [ \"$BUILD_CONFIG\" == \"gczeal\" ]; then echo \"--enable-gczeal\"; fi)  &&
    make -k V=;
    $(if [ \"$BUILD_CONFIG\" == \"gczeal\" ]; then echo \"export JS_GC_MAX_ZEAL=1;\"; fi)
    ./deps/spidershim/scripts/run-tests.py
    "
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then docker run -v `pwd`:/build spidernode
    sh -c "$EXPORTS; ./configure $(if [ \"$ENABLE_DEBUG\" == \"true\" ]; then echo '--debug'; fi) --engine=spidermonkey $(if [ \"$ENABLE_ASAN\" == \"true\" ]; then echo \"--enable-asan\"; fi) $(if [ \"$BUILD_CONFIG\" == \"gczeal\" ]; then echo \"--enable-gczeal\"; fi)  &&
    make -k V=;
    $(if [ \"$BUILD_CONFIG\" == \"gczeal\" ]; then echo \"export JS_GC_MAX_ZEAL=1;\"; fi)
    ./deps/spidershim/scripts/run-tests.py
    "
notifications:
  email: true
env:
  global:
    - LANG="en_US.UTF-8"
